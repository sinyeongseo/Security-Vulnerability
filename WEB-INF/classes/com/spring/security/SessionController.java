package com.spring.security;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class SessionController {
	
	@GetMapping(path = "/sessionattack.do")
    public String index(Model model, @RequestParam(name = "user", required = false) String user,
    		@RequestParam(name = "title", required = false) String title,
    		@RequestParam(name = "contents", required = false) String contents
    		) {
		
        model.addAttribute("user", user);
        model.addAttribute("title", title);
        model.addAttribute("contents", contents);
        
        return "session1";
	}
	
	  @GetMapping("/sessionsecure.do")
	    public String sessionpage() {
	        return "sessionsecure"; // 다른 페이지로 리다이렉트
	    }
	  
	  @GetMapping(path = "/sessionsecureattack.do")
	    public String sessionattack(Model model, @RequestParam(name = "user", required = false) String user,
	    		@RequestParam(name = "title", required = false) String title,
	    		@RequestParam(name = "contents", required = false) String contents
	    		) {
			
	        model.addAttribute("user", user);
	        model.addAttribute("title", title);
	        model.addAttribute("contents", contents);
	        
	        return "session2";
		}
		
	  
	
	  @RequestMapping("/sessionresult.do")
	  public String sessionresult(@RequestParam("cookie") String cookie, Model model) {
		  model.addAttribute("savedCookie", cookie); 
		  System.out.println("cookie값은"+cookie);
		  
		  return "sessionresult"; 
	  }
	 
	  
	  @RequestMapping("/setcookie.do") //쿠키에 httponly 속성 설정해주기
	    public void setCookie(HttpServletResponse response, HttpServletRequest request) {
		  
		    
	        // 쿠키 생성
	        Cookie savedCookie = new Cookie("testtest", "cookietesttest");
	        savedCookie.setPath("/");
	        savedCookie.setHttpOnly(true); // HttpOnly 속성 설정
	        
	        System.out.println(savedCookie);
	        // 쿠키를 응답 헤더에 추가하여 클라이언트로 전달
	        response.addCookie(savedCookie);
	    }
}
